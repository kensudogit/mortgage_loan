{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/mortgage-loan';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// ローン商品関連\nexport const loanProductApi = {\n  getAll: async () => {\n    const response = await api.get('/api/loan/products');\n    return response.data.data || [];\n  },\n  getById: async productId => {\n    const response = await api.get(`/api/loan/products/${productId}`);\n    return response.data.data || null;\n  }\n};\n\n// 見積もり関連\nexport const estimateApi = {\n  calculate: async request => {\n    const response = await api.post('/api/loan/estimate/calculate', request);\n    if (!response.data.success) {\n      throw new Error(response.data.message || '見積もり計算に失敗しました');\n    }\n    return response.data.data;\n  },\n  getById: async estimateId => {\n    const response = await api.get(`/api/loan/estimate/${estimateId}`);\n    return response.data.data || null;\n  }\n};\n\n// 申し込み関連\nexport const applicationApi = {\n  submit: async application => {\n    const response = await api.post('/api/loan/application/submit', application);\n    if (!response.data.success) {\n      throw new Error(response.data.message || '申し込みに失敗しました');\n    }\n    return response.data.data;\n  },\n  getById: async applicationId => {\n    const response = await api.get(`/api/loan/application/${applicationId}`);\n    return response.data.data || null;\n  },\n  getByCustomerId: async customerId => {\n    const response = await api.get(`/api/loan/application/customer/${customerId}`);\n    return response.data.data || [];\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","loanProductApi","getAll","response","get","data","getById","productId","estimateApi","calculate","request","post","success","Error","message","estimateId","applicationApi","submit","application","applicationId","getByCustomerId","customerId"],"sources":["C:/devlop/mortgage_loan/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoanProduct, LoanEstimate, LoanApplication, EstimateRequest, ApiResponse } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/mortgage-loan';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// ローン商品関連\nexport const loanProductApi = {\n  getAll: async (): Promise<LoanProduct[]> => {\n    const response = await api.get<ApiResponse<LoanProduct[]>>('/api/loan/products');\n    return response.data.data || [];\n  },\n\n  getById: async (productId: string): Promise<LoanProduct | null> => {\n    const response = await api.get<ApiResponse<LoanProduct>>(`/api/loan/products/${productId}`);\n    return response.data.data || null;\n  },\n};\n\n// 見積もり関連\nexport const estimateApi = {\n  calculate: async (request: EstimateRequest): Promise<LoanEstimate> => {\n    const response = await api.post<ApiResponse<LoanEstimate>>('/api/loan/estimate/calculate', request);\n    if (!response.data.success) {\n      throw new Error(response.data.message || '見積もり計算に失敗しました');\n    }\n    return response.data.data!;\n  },\n\n  getById: async (estimateId: string): Promise<LoanEstimate | null> => {\n    const response = await api.get<ApiResponse<LoanEstimate>>(`/api/loan/estimate/${estimateId}`);\n    return response.data.data || null;\n  },\n};\n\n// 申し込み関連\nexport const applicationApi = {\n  submit: async (application: LoanApplication): Promise<LoanApplication> => {\n    const response = await api.post<ApiResponse<LoanApplication>>('/api/loan/application/submit', application);\n    if (!response.data.success) {\n      throw new Error(response.data.message || '申し込みに失敗しました');\n    }\n    return response.data.data!;\n  },\n\n  getById: async (applicationId: string): Promise<LoanApplication | null> => {\n    const response = await api.get<ApiResponse<LoanApplication>>(`/api/loan/application/${applicationId}`);\n    return response.data.data || null;\n  },\n\n  getByCustomerId: async (customerId: string): Promise<LoanApplication[]> => {\n    const response = await api.get<ApiResponse<LoanApplication[]>>(`/api/loan/application/customer/${customerId}`);\n    return response.data.data || [];\n  },\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,qCAAqC;AAE3F,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAG;EAC5BC,MAAM,EAAE,MAAAA,CAAA,KAAoC;IAC1C,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAA6B,oBAAoB,CAAC;IAChF,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;EACjC,CAAC;EAEDC,OAAO,EAAE,MAAOC,SAAiB,IAAkC;IACjE,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAA2B,sBAAsBG,SAAS,EAAE,CAAC;IAC3F,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,IAAI;EACnC;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBC,SAAS,EAAE,MAAOC,OAAwB,IAA4B;IACpE,MAAMP,QAAQ,GAAG,MAAMN,GAAG,CAACc,IAAI,CAA4B,8BAA8B,EAAED,OAAO,CAAC;IACnG,IAAI,CAACP,QAAQ,CAACE,IAAI,CAACO,OAAO,EAAE;MAC1B,MAAM,IAAIC,KAAK,CAACV,QAAQ,CAACE,IAAI,CAACS,OAAO,IAAI,eAAe,CAAC;IAC3D;IACA,OAAOX,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAEDC,OAAO,EAAE,MAAOS,UAAkB,IAAmC;IACnE,MAAMZ,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAA4B,sBAAsBW,UAAU,EAAE,CAAC;IAC7F,OAAOZ,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,IAAI;EACnC;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAG;EAC5BC,MAAM,EAAE,MAAOC,WAA4B,IAA+B;IACxE,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACc,IAAI,CAA+B,8BAA8B,EAAEO,WAAW,CAAC;IAC1G,IAAI,CAACf,QAAQ,CAACE,IAAI,CAACO,OAAO,EAAE;MAC1B,MAAM,IAAIC,KAAK,CAACV,QAAQ,CAACE,IAAI,CAACS,OAAO,IAAI,aAAa,CAAC;IACzD;IACA,OAAOX,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAEDC,OAAO,EAAE,MAAOa,aAAqB,IAAsC;IACzE,MAAMhB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAA+B,yBAAyBe,aAAa,EAAE,CAAC;IACtG,OAAOhB,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,IAAI;EACnC,CAAC;EAEDe,eAAe,EAAE,MAAOC,UAAkB,IAAiC;IACzE,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAiC,kCAAkCiB,UAAU,EAAE,CAAC;IAC9G,OAAOlB,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;EACjC;AACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}